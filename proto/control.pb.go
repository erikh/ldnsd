// Code generated by protoc-gen-go. DO NOT EDIT.
// source: control.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Records struct {
	Records              []*Record `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Records) Reset()         { *m = Records{} }
func (m *Records) String() string { return proto.CompactTextString(m) }
func (*Records) ProtoMessage()    {}
func (*Records) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{0}
}

func (m *Records) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Records.Unmarshal(m, b)
}
func (m *Records) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Records.Marshal(b, m, deterministic)
}
func (m *Records) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Records.Merge(m, src)
}
func (m *Records) XXX_Size() int {
	return xxx_messageInfo_Records.Size(m)
}
func (m *Records) XXX_DiscardUnknown() {
	xxx_messageInfo_Records.DiscardUnknown(m)
}

var xxx_messageInfo_Records proto.InternalMessageInfo

func (m *Records) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

type Record struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c5120591600887d, []int{1}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Record) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*Records)(nil), "proto.Records")
	proto.RegisterType((*Record)(nil), "proto.Record")
}

func init() {
	proto.RegisterFile("control.proto", fileDescriptor_0c5120591600887d)
}

var fileDescriptor_0c5120591600887d = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xce, 0xcf, 0x2b,
	0x29, 0xca, 0xcf, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0xf2, 0xe9,
	0xf9, 0xf9, 0xe9, 0x39, 0xa9, 0xfa, 0x60, 0x5e, 0x52, 0x69, 0x9a, 0x7e, 0x49, 0x66, 0x6e, 0x6a,
	0x71, 0x49, 0x62, 0x6e, 0x01, 0x44, 0x9d, 0x94, 0x34, 0xba, 0x82, 0xd4, 0xdc, 0x82, 0x92, 0x4a,
	0x88, 0xa4, 0x92, 0x11, 0x17, 0x7b, 0x50, 0x6a, 0x72, 0x7e, 0x51, 0x4a, 0xb1, 0x90, 0x3a, 0x17,
	0x7b, 0x11, 0x84, 0x29, 0xc1, 0xa8, 0xc0, 0xac, 0xc1, 0x6d, 0xc4, 0x0b, 0x51, 0xa3, 0x07, 0x51,
	0x10, 0x04, 0x93, 0x55, 0x32, 0xe3, 0x62, 0x83, 0x08, 0x09, 0x09, 0x71, 0xb1, 0x64, 0xe4, 0x17,
	0x97, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x42, 0x12, 0x5c, 0xec, 0x89, 0x29,
	0x29, 0x45, 0xa9, 0xc5, 0xc5, 0x12, 0x4c, 0x60, 0x61, 0x18, 0xd7, 0x68, 0x09, 0x23, 0x17, 0x97,
	0x8b, 0x5f, 0xb0, 0x33, 0xc4, 0x17, 0x42, 0xfa, 0x5c, 0x2c, 0xc1, 0xa9, 0x25, 0x8e, 0x42, 0xa8,
	0xd6, 0x48, 0x89, 0xe9, 0x41, 0xdc, 0xab, 0x07, 0x73, 0xaf, 0x9e, 0x2b, 0xc8, 0xbd, 0x4a, 0x0c,
	0x42, 0x46, 0x5c, 0xec, 0x2e, 0xa9, 0x39, 0xa9, 0x25, 0xa9, 0x24, 0xe8, 0x31, 0xe4, 0x62, 0xf5,
	0xc9, 0x2c, 0x2e, 0x71, 0x14, 0xc2, 0xa1, 0x44, 0x8a, 0x0f, 0xc5, 0xa4, 0x62, 0x25, 0x86, 0x24,
	0x36, 0xb0, 0x80, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x98, 0x08, 0x95, 0xdf, 0x6f, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DNSControlClient is the client API for DNSControl service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DNSControlClient interface {
	SetA(ctx context.Context, in *Record, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteA(ctx context.Context, in *Record, opts ...grpc.CallOption) (*empty.Empty, error)
	ListA(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Records, error)
}

type dNSControlClient struct {
	cc grpc.ClientConnInterface
}

func NewDNSControlClient(cc grpc.ClientConnInterface) DNSControlClient {
	return &dNSControlClient{cc}
}

func (c *dNSControlClient) SetA(ctx context.Context, in *Record, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.DNSControl/SetA", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSControlClient) DeleteA(ctx context.Context, in *Record, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.DNSControl/DeleteA", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dNSControlClient) ListA(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Records, error) {
	out := new(Records)
	err := c.cc.Invoke(ctx, "/proto.DNSControl/ListA", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DNSControlServer is the server API for DNSControl service.
type DNSControlServer interface {
	SetA(context.Context, *Record) (*empty.Empty, error)
	DeleteA(context.Context, *Record) (*empty.Empty, error)
	ListA(context.Context, *empty.Empty) (*Records, error)
}

// UnimplementedDNSControlServer can be embedded to have forward compatible implementations.
type UnimplementedDNSControlServer struct {
}

func (*UnimplementedDNSControlServer) SetA(ctx context.Context, req *Record) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetA not implemented")
}
func (*UnimplementedDNSControlServer) DeleteA(ctx context.Context, req *Record) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteA not implemented")
}
func (*UnimplementedDNSControlServer) ListA(ctx context.Context, req *empty.Empty) (*Records, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListA not implemented")
}

func RegisterDNSControlServer(s *grpc.Server, srv DNSControlServer) {
	s.RegisterService(&_DNSControl_serviceDesc, srv)
}

func _DNSControl_SetA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Record)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSControlServer).SetA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DNSControl/SetA",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSControlServer).SetA(ctx, req.(*Record))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSControl_DeleteA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Record)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSControlServer).DeleteA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DNSControl/DeleteA",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSControlServer).DeleteA(ctx, req.(*Record))
	}
	return interceptor(ctx, in, info, handler)
}

func _DNSControl_ListA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DNSControlServer).ListA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.DNSControl/ListA",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DNSControlServer).ListA(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _DNSControl_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.DNSControl",
	HandlerType: (*DNSControlServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetA",
			Handler:    _DNSControl_SetA_Handler,
		},
		{
			MethodName: "DeleteA",
			Handler:    _DNSControl_DeleteA_Handler,
		},
		{
			MethodName: "ListA",
			Handler:    _DNSControl_ListA_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "control.proto",
}
